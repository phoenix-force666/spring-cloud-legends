#apollo.bootstrap.enabled=true
#apollo.bootstrap.namespaces=application
#AppId\u7528\u6765\u6807\u8BC6\u5E94\u7528\u8EAB\u4EFD\u7684\u552F\u4E00id,\u4E0E\u7BA1\u7406\u5E73\u53F0\u4E2D\u7684AppId\u5BF9\u5E94
#app.id=qq-gateway
#apollo\u5730\u5740
#apollo.meta=http://xxx.xx.xx.xx:8080
#\u52A0\u89E3\u5BC6\u79D8\u94A5 #
#jasypt.encryptor.password=xxx
#\u73AF\u5883\u533A\u5206
#env=FAT


server.port = 8081
spring.application.name = legends-gateway
#logger.remove.regex = ("passwd"|"pwdnew"|"qrdnew"|"pwdold"|"loginPassword"|"pridtf"|"phonno"|"mercph"|"tlphno"|"bfynoo"|"bfynot"|"btfnoh"|"btfnof"|"cardno"|"idtfno"|"rcidno"|"userem"):"(.*?)"

#eureka.client.service-url.defaultZone = http://192.181.4.64:8761/eureka/,http://192.181.4.65:8761/eureka/,http://192.181.4.66:8761/eureka/
#eureka.instance.prefer-ip-address = true
#eureka.instance.instance-id = ${spring.cloud.client.ip-address}:${server.port}

spring.cloud.nacos.config.server-addr=127.0.0.1:8848
# Nacos \u63A7\u5236\u53F0\u6DFB\u52A0\u914D\u7F6E\uFF1A
# Data ID\uFF1Aspring-cloud-legends-web-starter-example.properties
# Group\uFF1ADEFAULT_GROUP
# \u914D\u7F6E\u5185\u5BB9\uFF1AuseLocalCache=true
# \u6307\u5B9A\u914D\u7F6E\u7684\u540E\u7F00\uFF0C\u652F\u6301 properties\u3001yaml\u3001yml\uFF0C\u9ED8\u8BA4\u4E3A properties
spring.cloud.nacos.config.file-extension=properties
#spring.cloud.nacos.config.file-extension=yaml
spring.main.allow-bean-definition-overriding=true

management.endpoints.web.exposure.include = *
logging.level.org.springframework.cloud.gateway = debug

#web
spring.cloud.gateway.routes[0].id = QQ-WEB
spring.cloud.gateway.routes[0].uri = lb://QQ-WEB
spring.cloud.gateway.routes[0].predicates[0] = Path=/qq-web/**
spring.cloud.gateway.routes[0].filters[0] = StripPrefix=1
spring.cloud.gateway.routes[0].filters[1] = SwaggerHeaderFilter
#auth
spring.cloud.gateway.routes[1].id = QQ-AUTH
spring.cloud.gateway.routes[1].uri = lb://QQ-AUTH
spring.cloud.gateway.routes[1].predicates[0] = Path=/qq-auth/**
spring.cloud.gateway.routes[1].filters[0] = StripPrefix=1
spring.cloud.gateway.routes[1].filters[1] = SwaggerHeaderFilter

#dev
spring.cloud.gateway.routes[2].id = QQ-DEV
spring.cloud.gateway.routes[2].uri = lb://QQ-DEV
spring.cloud.gateway.routes[2].predicates[0] = Path=//qq-dev/**
spring.cloud.gateway.routes[2].filters[0] = StripPrefix=1
spring.cloud.gateway.routes[2].filters[1] = SwaggerHeaderFilter
#ops
spring.cloud.gateway.routes[3].id = QQ-OPS
spring.cloud.gateway.routes[3].uri = lb://QQ-OPS
spring.cloud.gateway.routes[3].predicates[0] = Path=/qq-ops/**
spring.cloud.gateway.routes[3].filters[0] = StripPrefix=1
spring.cloud.gateway.routes[3].filters[1] = SwaggerHeaderFilter

spring.cloud.gateway.routes[4].id = spring-cloud-legends-web-starter-example
spring.cloud.gateway.routes[4].uri = lb://spring-cloud-legends-web-starter-example
spring.cloud.gateway.routes[4].predicates[0] = Path=/web-example/**
spring.cloud.gateway.routes[4].filters[0] = StripPrefix=1
spring.cloud.gateway.routes[4].filters[1] = SwaggerHeaderFilter

gate.ignore.startWith = /web/openapi,/auth/openapi,/openapi
key = test
