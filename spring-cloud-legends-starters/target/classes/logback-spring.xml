<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<include resource="org/springframework/boot/logging/logback/base.xml" />
	<springProperty scope="context" name="logging.path" source="logging.path" defaultValue="${LOG_PATH:-.}/logs"/>
	<springProperty scope="context" name="spring.application.name" source="spring.application.name"/>
	<springProperty scope="context" name="app.id" source="app.id"/>
	<!--<property name="LOG_PATH" value="${LOG_PATH:-.}/${spring.application.name}" />-->
	<!--<property name="LOG_PATH" value="${LOG_PATH:-.}/${app.id}/logs" />-->
	<property name="LOG_PATH" value="${logging.path}" />
	<property name="maxHistory" value="90" />
	<property name="log.queueSize" value="256" />

	<appender name="FILEERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${LOG_PATH}/log_error.log</file>
		<!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/error/log-error-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>

		<append>true</append>
		<!-- 日志文件的格式 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>utf-8</charset>
		</encoder>
		<!-- 此日志文件只记录error级别的 -->
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>error</level>
		</filter>
	</appender>

	<appender name="FILEWARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/log_warn.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/warn/log-warn-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>

		<append>true</append>

		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>utf-8</charset>
		</encoder>

		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>warn</level>
		</filter>
	</appender>

	<appender name="ASYNC_FILEWARN" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>${log.queueSize}</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="FILEWARN" />
	</appender>

	<appender name="FILEINFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/log_info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/info/log-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>

		<append>true</append>

		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>utf-8</charset>
		</encoder>

		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>info</level>
		</filter>
	</appender>

	<appender name="ASYNC_FILEINFO" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>${log.queueSize}</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="FILEINFO" />
	</appender>

	<!-- 指定 dev,test,uat环境输出日志 -->
	<springProfile name="dev,test,uat">
		<!-- 指定输出的文件及输出级别 -->
		<root level="info">
			<appender-ref ref="CONSOLE" />
			<appender-ref ref="FILEERROR"/>
			<appender-ref ref="ASYNC_FILEINFO" />
			<appender-ref ref="ASYNC_FILEWARN" />
		</root>
		<logger name="com.legends" level="debug"/>
	</springProfile>

	<!-- 指定 prod环境输出日志 -->
	<springProfile name="prod">
		<!-- 指定输出的文件及输出级别 -->
		<root level="info">
			<appender-ref ref="CONSOLE" />
			<appender-ref ref="FILEERROR"/>
			<appender-ref ref="ASYNC_FILEINFO" />
			<appender-ref ref="ASYNC_FILEWARN" />
		</root>
		<logger name="com.legends" level="info"/>
	</springProfile>

</configuration>